<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common.mapper.TypeProfessional2Mapper" >
  <resultMap id="BaseResultMap" type="common.model.TypeProfessional2" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="class_id1" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="class_name2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="print_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="print_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="import_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="import_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="export_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="export_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_t" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_u" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, class_id1, class_name2, print_user, print_time, import_user, import_time, export_user, 
    export_time, c_t, c_u, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from type_professional2
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from type_professional2
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="common.query.TypeProfessional1Query" >
    insert into type_professional2 (id, class_id1, class_name2, 
      print_user, print_time, import_user, 
      import_time, export_user, export_time, 
      c_t, c_u, status)
    values (#{id,jdbcType=INTEGER}, #{classId1,jdbcType=INTEGER}, #{className2,jdbcType=VARCHAR}, 
      #{printUser,jdbcType=INTEGER}, #{printTime,jdbcType=INTEGER}, #{importUser,jdbcType=INTEGER}, 
      #{importTime,jdbcType=INTEGER}, #{exportUser,jdbcType=INTEGER}, #{exportTime,jdbcType=INTEGER}, 
      #{cT,jdbcType=INTEGER}, #{cU,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="common.model.TypeProfessional2" >
    insert into type_professional2
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classId1 != null" >
        class_id1,
      </if>
      <if test="className2 != null" >
        class_name2,
      </if>
      <if test="printUser != null" >
        print_user,
      </if>
      <if test="printTime != null" >
        print_time,
      </if>
      <if test="importUser != null" >
        import_user,
      </if>
      <if test="importTime != null" >
        import_time,
      </if>
      <if test="exportUser != null" >
        export_user,
      </if>
      <if test="exportTime != null" >
        export_time,
      </if>
      <if test="cT != null" >
        c_t,
      </if>
      <if test="cU != null" >
        c_u,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classId1 != null" >
        #{classId1,jdbcType=INTEGER},
      </if>
      <if test="className2 != null" >
        #{className2,jdbcType=VARCHAR},
      </if>
      <if test="printUser != null" >
        #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        #{cT,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        #{cU,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="common.model.TypeProfessional2" >
    update type_professional2
    <set >
      <if test="classId1 != null" >
        class_id1 = #{classId1,jdbcType=INTEGER},
      </if>
      <if test="className2 != null" >
        class_name2 = #{className2,jdbcType=VARCHAR},
      </if>
      <if test="printUser != null" >
        print_user = #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        print_time = #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        import_user = #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        import_time = #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        export_user = #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        export_time = #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        c_t = #{cT,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        c_u = #{cU,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="common.model.TypeProfessional2" >
    update type_professional2
    set class_id1 = #{classId1,jdbcType=INTEGER},
      class_name2 = #{className2,jdbcType=VARCHAR},
      print_user = #{printUser,jdbcType=INTEGER},
      print_time = #{printTime,jdbcType=INTEGER},
      import_user = #{importUser,jdbcType=INTEGER},
      import_time = #{importTime,jdbcType=INTEGER},
      export_user = #{exportUser,jdbcType=INTEGER},
      export_time = #{exportTime,jdbcType=INTEGER},
      c_t = #{cT,jdbcType=INTEGER},
      c_u = #{cU,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryTypeProfessional2List" parameterType="common.model.TypeProfessional2" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from type_professional2
    where status=1
    <if test="id != null">
      AND id= #{id}
    </if>
    <if test="sortName != null  ">
      ORDER BY ${sortName} ${sortOrder}
    </if>
  </select>
  <select id="queryTypeProfessional2ById" parameterType="java.lang.Integer" resultType="java.lang.String">
    select
    class_name2
    from type_professional2
    where status=1 AND id=#{id}
  </select>
  <select id="queryTypeProfessional2Lists" parameterType="common.query.TypeProfessional2Query" resultMap="BaseResultMap">
    select *
    from type_professional2
    where class_id1 = #{classId1}
    <if test="status != null">  AND status= #{status} </if>
    <if test="id != null">  AND id= #{id} </if>
    <if test="className2 != null and className2 !=''">  <![CDATA[	AND class_name2 LIKE CONCAT(CONCAT('%',#{className2}),'%')	]]> </if>
    <if test="sortName != null  ">        ORDER BY ${sortName} ${sortOrder} </if>
    <if test="pageNumber &gt;0 ">         limit #{startRecord} , #{pageSize} </if>
  </select>
  <select id="queryTypeProfessional2Count" parameterType="common.query.TypeProfessional2Query" resultType="java.lang.Integer">
    select count(*)
    from type_professional2
    where class_id1 = #{classId1}
    <if test="status != null">  AND status= #{status} </if>
    <if test="id != null">  AND id= #{id} </if>
    <if test="className2 != null and className2 !=''">  <![CDATA[	AND class_name2 LIKE CONCAT(CONCAT('%',#{className2}),'%')	]]> </if>
  </select>
  <select id="queryTypeProfessional2ByName"  parameterType="common.query.TypeProfessional2Query" resultType="java.lang.Integer">
    select count(*)
    from type_professional2
    where class_name2=#{className2}
  </select>
  <update id="updateTypeProfessional2Status" >
    update type_professional2
    set status = #{status},c_u = #{cU}, c_t = #{cTime}
    where id = #{id}
  </update>
</mapper>