<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common.mapper.ShareRoleMapper" >
  <resultMap id="BaseResultMap" type="common.model.ShareRole" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="role" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="permissions" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, role, permissions
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from share_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getUserRoleList" resultMap="BaseResultMap" parameterType="common.query.ShareRoleQuery" >
    select *
    from share_role
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from share_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="common.query.ShareRoleQuery" >
    insert into share_role (id, role, permissions
      )
    values (#{id,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, #{permissions,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="common.model.ShareRole" >
    insert into share_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="permissions != null" >
        permissions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="permissions != null" >
        #{permissions,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="common.model.ShareRole" >
    update share_role
    <set >
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="permissions != null" >
        permissions = #{permissions,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="common.model.ShareRole" >
    update share_role
    set role = #{role,jdbcType=VARCHAR},
      permissions = #{permissions,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getRoleById" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT role
        FROM share_role
        WHERE id=#{id}
  </select>
  <select id="getRolePermissionsId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select  permissions
    from share_role
    where id=#{id}
  </select>

</mapper>