<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common.mapper.AbnormalMapper" >
  <resultMap id="BaseResultMap" type="common.model.Abnormal" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="num" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from abnormal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from abnormal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="common.model.Abnormal" >
    insert into abnormal (id, user_id, num
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="common.model.Abnormal" >
    insert into abnormal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="common.model.Abnormal" >
    update abnormal
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="common.model.Abnormal" >
    update abnormal
    set user_id = #{userId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAbnormal" parameterType="common.model.Abnormal" resultMap="BaseResultMap">
    SELECT *
    FROM abnormal
  </select>
  <delete id="deleteAbnormal">
      truncate table abnormal
  </delete>
 <insert id="batchInsertAbnormal" parameterType="List">
    INSERT INTO abnormal(user_id,num)
    <foreach collection="list" item="item" index="index" open="(" close=")" separator="union all">
      SELECT #{item.userId} , #{item.num} FROM DUAL
    </foreach>
  </insert>
</mapper>