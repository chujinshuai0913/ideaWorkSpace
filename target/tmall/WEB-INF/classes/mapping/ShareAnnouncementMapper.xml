<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common.mapper.ShareAnnouncementMapper" >
  <resultMap id="BaseResultMap" type="common.model.ShareAnnouncement" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="activity_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="src" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="upload_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="end_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_delete" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg  column="status"  jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cU" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cT" jdbcType="INTEGER" javaType="java.lang.Integer" />

    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, activity_id, src, remark, upload_time, end_time, is_delete,status, cU, cT
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from share_announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from share_announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="common.query.ShareAnnouncementQuery" >
    insert into share_announcement (id, activity_id, src, 
      remark, upload_time, end_time, 
      is_delete,status, cU, cT)
    values (#{id,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{src,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{uploadTime,jdbcType=INTEGER}, #{endTime,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER},#{status,jdbcType=INTEGER}, #{cu,jdbcType=INTEGER}, #{ct,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="common.model.ShareAnnouncement" >
    insert into share_announcement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="src != null" >
        src,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
        <if test="status != null" >
          status,
        </if>
      <if test="cu != null" >
        cU,
      </if>
      <if test="ct != null" >
        cT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="src != null" >
        #{src,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
        <if test="status != null" >
            #{status,jdbcType=INTEGER},
        </if>
      <if test="cu != null" >
        #{cu,jdbcType=INTEGER},
      </if>
      <if test="ct != null" >
        #{ct,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="common.model.ShareAnnouncement" >
    update share_announcement
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="src != null" >
        src = #{src,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
        <if test="status != null" >
            #{status,jdbcType=INTEGER},
        </if>
      <if test="cu != null" >
        cU = #{cu,jdbcType=INTEGER},
      </if>
      <if test="ct != null" >
        cT = #{ct,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="common.model.ShareAnnouncement" >
    update share_announcement
    set activity_id = #{activityId,jdbcType=INTEGER},
      src = #{src,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
      cU = #{cu,jdbcType=INTEGER},
      cT = #{ct,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getShareAnnouncementCount" parameterType="common.query.ShareAnnouncementQuery" resultType="java.lang.Integer">
    select count(*)
    from share_announcement
    where 1=1
    <if test="isDelete != null  ">    AND is_delete = #{isDelete}        </if>
      <if test="status != null  ">    AND status = #{status}        </if>
    <if test="sTime != null  ">    AND upload_time >= #{sTime}        </if>
    <if test="fTime != null  ">   <![CDATA[ AND upload_time <= #{fTime} ]]> </if>
    <if test="activityId != null and activityId !=''">  AND activity_id= #{activityId} </if>
  </select>
  <select id="getShareAnnouncementList" parameterType="common.query.ShareAnnouncementQuery" resultMap="BaseResultMap">
    select *
    from share_announcement
    where  1=1
    <if test="isDelete != null  ">    AND is_delete = #{isDelete}        </if>
    <if test="status != null  ">    AND status = #{status}        </if>
    <if test="sTime != null  ">    AND upload_time >= #{sTime}        </if>
    <if test="fTime != null  ">   <![CDATA[ AND upload_time <= #{fTime} ]]> </if>
    <if test="activityId != null and activityId !=''">  AND activity_id= #{activityId} </if>
    <if test="sortName != null  ">        ORDER BY ${sortName} ${sortOrder} </if>
    <if test="pageNumber &gt;0 ">         limit #{startRecord} , #{pageSize} </if>
  </select>
  <update id="updateShareAnnouncementStatus" >
    update share_announcement
    set is_delete = #{isDelete},cU = #{cU}, cT = #{cTime}
    where id = #{id}
  </update>

  <update id="updateShareAnnouncementStatusI" >
    update share_announcement
    set status = #{status}
    where id = #{id}
  </update>
  <select id="getShareAnnouncementImgList" parameterType="common.query.ShareAnnouncementQuery" resultMap="BaseResultMap">
    select *
    from share_announcement
    where is_delete = 2 AND  unix_timestamp()&lt;end_time AND unix_timestamp()&gt;upload_time
    ORDER BY end_time ASC, cT ASC
    limit #{pageSize}
  </select>
  <select id="getShareAnnouncementImgCount" parameterType="common.query.ShareAnnouncementQuery" resultType="java.lang.Integer">
    select count(*)
    from share_announcement
    where is_delete = 2  AND  unix_timestamp()&lt;end_time AND unix_timestamp()&gt;upload_time
    GROUP BY upload_time
    ORDER BY upload_time ASC
    limit #{pageSize}
  </select>

  <select id="getShareAnnouncementBySrc" parameterType="common.query.ShareAnnouncementQuery" resultType="java.lang.Integer">
    select count(*)
    from share_announcement
    where  src=#{src}
  </select>

</mapper>