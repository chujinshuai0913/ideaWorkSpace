<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common.mapper.BookProfessionalListMapper" >
  <resultMap id="BaseResultMap" type="common.model.BookProfessionalList" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ISBN" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type_professional1" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type_professionalname1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type_professional2" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type_professionalname2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="grade" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="semester" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="print_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="print_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="import_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="import_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="export_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="export_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_u" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_t" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_delete" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_name, ISBN, type_professional1, type_professionalname1, type_professional2, 
    type_professionalname2, grade, semester, print_user, print_time, import_user, import_time, 
    export_user, export_time, c_u, c_t, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_professional_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_professional_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="common.model.BookProfessionalList" >
    insert into book_professional_list (id, book_name, ISBN, 
      type_professional1, type_professionalname1, 
      type_professional2, type_professionalname2, 
      grade, semester, print_user, 
      print_time, import_user, import_time, 
      export_user, export_time, c_u, 
      c_t, is_delete)
    values (#{id,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{isbn,jdbcType=INTEGER}, 
      #{typeProfessional1,jdbcType=INTEGER}, #{typeProfessionalname1,jdbcType=VARCHAR}, 
      #{typeProfessional2,jdbcType=INTEGER}, #{typeProfessionalname2,jdbcType=VARCHAR}, 
      #{grade,jdbcType=INTEGER}, #{semester,jdbcType=INTEGER}, #{printUser,jdbcType=INTEGER}, 
      #{printTime,jdbcType=INTEGER}, #{importUser,jdbcType=INTEGER}, #{importTime,jdbcType=INTEGER}, 
      #{exportUser,jdbcType=INTEGER}, #{exportTime,jdbcType=INTEGER}, #{cU,jdbcType=INTEGER}, 
      #{cT,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="common.model.BookProfessionalList" >
    insert into book_professional_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="typeProfessional1 != null" >
        type_professional1,
      </if>
      <if test="typeProfessionalname1 != null" >
        type_professionalname1,
      </if>
      <if test="typeProfessional2 != null" >
        type_professional2,
      </if>
      <if test="typeProfessionalname2 != null" >
        type_professionalname2,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="semester != null" >
        semester,
      </if>
      <if test="printUser != null" >
        print_user,
      </if>
      <if test="printTime != null" >
        print_time,
      </if>
      <if test="importUser != null" >
        import_user,
      </if>
      <if test="importTime != null" >
        import_time,
      </if>
      <if test="exportUser != null" >
        export_user,
      </if>
      <if test="exportTime != null" >
        export_time,
      </if>
      <if test="cU != null" >
        c_u,
      </if>
      <if test="cT != null" >
        c_t,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=INTEGER},
      </if>
      <if test="typeProfessional1 != null" >
        #{typeProfessional1,jdbcType=INTEGER},
      </if>
      <if test="typeProfessionalname1 != null" >
        #{typeProfessionalname1,jdbcType=VARCHAR},
      </if>
      <if test="typeProfessional2 != null" >
        #{typeProfessional2,jdbcType=INTEGER},
      </if>
      <if test="typeProfessionalname2 != null" >
        #{typeProfessionalname2,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="semester != null" >
        #{semester,jdbcType=INTEGER},
      </if>
      <if test="printUser != null" >
        #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        #{cU,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        #{cT,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="common.model.BookProfessionalList" >
    update book_professional_list
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=INTEGER},
      </if>
      <if test="typeProfessional1 != null" >
        type_professional1 = #{typeProfessional1,jdbcType=INTEGER},
      </if>
      <if test="typeProfessionalname1 != null" >
        type_professionalname1 = #{typeProfessionalname1,jdbcType=VARCHAR},
      </if>
      <if test="typeProfessional2 != null" >
        type_professional2 = #{typeProfessional2,jdbcType=INTEGER},
      </if>
      <if test="typeProfessionalname2 != null" >
        type_professionalname2 = #{typeProfessionalname2,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="semester != null" >
        semester = #{semester,jdbcType=INTEGER},
      </if>
      <if test="printUser != null" >
        print_user = #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        print_time = #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        import_user = #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        import_time = #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        export_user = #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        export_time = #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        c_u = #{cU,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        c_t = #{cT,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="common.model.BookProfessionalList" >
    update book_professional_list
    set book_name = #{bookName,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=INTEGER},
      type_professional1 = #{typeProfessional1,jdbcType=INTEGER},
      type_professionalname1 = #{typeProfessionalname1,jdbcType=VARCHAR},
      type_professional2 = #{typeProfessional2,jdbcType=INTEGER},
      type_professionalname2 = #{typeProfessionalname2,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      semester = #{semester,jdbcType=INTEGER},
      print_user = #{printUser,jdbcType=INTEGER},
      print_time = #{printTime,jdbcType=INTEGER},
      import_user = #{importUser,jdbcType=INTEGER},
      import_time = #{importTime,jdbcType=INTEGER},
      export_user = #{exportUser,jdbcType=INTEGER},
      export_time = #{exportTime,jdbcType=INTEGER},
      c_u = #{cU,jdbcType=INTEGER},
      c_t = #{cT,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getBookProfessionalListCount" resultType="java.lang.Integer" parameterType="common.query.BookBorrowQuery">
    SELECT count(*)
    FROM book_professional_list
    WHERE is_delete=0
      <if test="bookName != null and bookName !=''">  <![CDATA[	AND book_name LIKE CONCAT(CONCAT('%',#{bookName}),'%')	]]> </if>
      <if test="typeProfessionalname1 != null and typeProfessionalname1 !=''">  <![CDATA[	AND type_professionalname1 LIKE CONCAT(CONCAT('%',#{typeProfessionalname1}),'%')	]]> </if>
      <if test="typeProfessionalname2 != null and typeProfessionalname2 !=''">  <![CDATA[	AND type_professionalname2 LIKE CONCAT(CONCAT('%',#{typeProfessionalname2}),'%')	]]> </if>
      <if test="isbn != null" > AND ISBN = #{isbn,jdbcType=INTEGER}  </if>
      <if test="grade != null" >  AND grade = #{grade,jdbcType=INTEGER} </if>
      <if test="semester != null" > AND semester = #{semester,jdbcType=INTEGER}  </if>
  </select>
  <select id="getBookProfessionalList" resultMap="BaseResultMap" parameterType="common.query.BookProfessionalListQuery">
    SELECT *
    FROM book_professional_list
    WHERE is_delete=0
      <if test="bookName != null and bookName !=''">  <![CDATA[	AND book_name LIKE CONCAT(CONCAT('%',#{bookName}),'%')	]]> </if>
      <if test="typeProfessionalname1 != null and typeProfessionalname1 !=''">  <![CDATA[	AND type_professionalname1 LIKE CONCAT(CONCAT('%',#{typeProfessionalname1}),'%')	]]> </if>
      <if test="typeProfessionalname2 != null and typeProfessionalname2 !=''">  <![CDATA[	AND type_professionalname2 LIKE CONCAT(CONCAT('%',#{typeProfessionalname2}),'%')	]]> </if>
      <if test="isbn != null" > AND ISBN = #{isbn,jdbcType=INTEGER}  </if>
      <if test="grade != null" >  AND grade = #{grade,jdbcType=INTEGER} </if>
      <if test="semester != null" > AND semester = #{semester,jdbcType=INTEGER}  </if>
      <if test="sortName != null  ">        ORDER BY ${sortName} ${sortOrder} </if>
      <if test="pageNumber &gt;0 ">         limit #{startRecord} , #{pageSize} </if>
  </select>
  <update id="updateBookProfessionalList" parameterType="common.query.BookProfessionalListQuery">
    update book_professional_list
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=INTEGER},
      </if>
      <if test="typeProfessional1 != null" >
        type_professional1 = #{typeProfessional1,jdbcType=INTEGER},
      </if>
      <if test="typeProfessionalname1 != null" >
        type_professionalname1 = #{typeProfessionalname1,jdbcType=VARCHAR},
      </if>
      <if test="typeProfessional2 != null" >
        type_professional2 = #{typeProfessional2,jdbcType=INTEGER},
      </if>
      <if test="typeProfessionalname2 != null" >
        type_professionalname2 = #{typeProfessionalname2,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="semester != null" >
        semester = #{semester,jdbcType=INTEGER},
      </if>
      <if test="printUser != null" >
        print_user = #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        print_time = #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        import_user = #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        import_time = #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        export_user = #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        export_time = #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        c_u = #{cU,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        c_t = #{cT,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="deleteBookProfessionalList" parameterType="common.query.BookProfessionalListQuery">
    update book_professional_list
    set is_delete =1,c_u = #{cU}, c_t = #{cT}
    where id in
      <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
          #{item}
      </foreach>
  </update>
</mapper>