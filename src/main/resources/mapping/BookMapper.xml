<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sharebook.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="sharebook.model.Book" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ISBN" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="author" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="press" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="press_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="page_number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="src" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pricing" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="seller_number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_type2" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_type1" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_type_name2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="book_type_name1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="introduce" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="professional_type1" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="professional_type2" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="professional_type_name1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="professional_type_name2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="c_u" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_t" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ISBN, book_name, author, press, press_time, page_number, src, pricing, seller_number, 
    book_type2, book_type1, book_type_name2, book_type_name1, introduce, professional_type1, 
    professional_type2, professional_type_name1, professional_type_name2, c_u, c_t
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sharebook.model.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sharebook.model.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sharebook.model.Book" >
    insert into book (id, ISBN, book_name, 
      author, press, press_time, 
      page_number, src, pricing, 
      seller_number, book_type2, book_type1, 
      book_type_name2, book_type_name1, introduce, 
      professional_type1, professional_type2, professional_type_name1, 
      professional_type_name2, c_u, c_t
      )
    values (#{id,jdbcType=INTEGER}, #{isbn,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{press,jdbcType=VARCHAR}, #{pressTime,jdbcType=INTEGER}, 
      #{pageNumber,jdbcType=INTEGER}, #{src,jdbcType=VARCHAR}, #{pricing,jdbcType=DECIMAL}, 
      #{sellerNumber,jdbcType=INTEGER}, #{bookType2,jdbcType=INTEGER}, #{bookType1,jdbcType=INTEGER}, 
      #{bookTypeName2,jdbcType=VARCHAR}, #{bookTypeName1,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{professionalType1,jdbcType=INTEGER}, #{professionalType2,jdbcType=INTEGER}, #{professionalTypeName1,jdbcType=VARCHAR}, 
      #{professionalTypeName2,jdbcType=VARCHAR}, #{cU,jdbcType=INTEGER}, #{cT,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="sharebook.model.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="press != null" >
        press,
      </if>
      <if test="pressTime != null" >
        press_time,
      </if>
      <if test="pageNumber != null" >
        page_number,
      </if>
      <if test="src != null" >
        src,
      </if>
      <if test="pricing != null" >
        pricing,
      </if>
      <if test="sellerNumber != null" >
        seller_number,
      </if>
      <if test="bookType2 != null" >
        book_type2,
      </if>
      <if test="bookType1 != null" >
        book_type1,
      </if>
      <if test="bookTypeName2 != null" >
        book_type_name2,
      </if>
      <if test="bookTypeName1 != null" >
        book_type_name1,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="professionalType1 != null" >
        professional_type1,
      </if>
      <if test="professionalType2 != null" >
        professional_type2,
      </if>
      <if test="professionalTypeName1 != null" >
        professional_type_name1,
      </if>
      <if test="professionalTypeName2 != null" >
        professional_type_name2,
      </if>
      <if test="cU != null" >
        c_u,
      </if>
      <if test="cT != null" >
        c_t,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null" >
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="pressTime != null" >
        #{pressTime,jdbcType=INTEGER},
      </if>
      <if test="pageNumber != null" >
        #{pageNumber,jdbcType=INTEGER},
      </if>
      <if test="src != null" >
        #{src,jdbcType=VARCHAR},
      </if>
      <if test="pricing != null" >
        #{pricing,jdbcType=DECIMAL},
      </if>
      <if test="sellerNumber != null" >
        #{sellerNumber,jdbcType=INTEGER},
      </if>
      <if test="bookType2 != null" >
        #{bookType2,jdbcType=INTEGER},
      </if>
      <if test="bookType1 != null" >
        #{bookType1,jdbcType=INTEGER},
      </if>
      <if test="bookTypeName2 != null" >
        #{bookTypeName2,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeName1 != null" >
        #{bookTypeName1,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="professionalType1 != null" >
        #{professionalType1,jdbcType=INTEGER},
      </if>
      <if test="professionalType2 != null" >
        #{professionalType2,jdbcType=INTEGER},
      </if>
      <if test="professionalTypeName1 != null" >
        #{professionalTypeName1,jdbcType=VARCHAR},
      </if>
      <if test="professionalTypeName2 != null" >
        #{professionalTypeName2,jdbcType=VARCHAR},
      </if>
      <if test="cU != null" >
        #{cU,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        #{cT,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sharebook.model.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isbn != null" >
        ISBN = #{record.isbn,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null" >
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.pressTime != null" >
        press_time = #{record.pressTime,jdbcType=INTEGER},
      </if>
      <if test="record.pageNumber != null" >
        page_number = #{record.pageNumber,jdbcType=INTEGER},
      </if>
      <if test="record.src != null" >
        src = #{record.src,jdbcType=VARCHAR},
      </if>
      <if test="record.pricing != null" >
        pricing = #{record.pricing,jdbcType=DECIMAL},
      </if>
      <if test="record.sellerNumber != null" >
        seller_number = #{record.sellerNumber,jdbcType=INTEGER},
      </if>
      <if test="record.bookType2 != null" >
        book_type2 = #{record.bookType2,jdbcType=INTEGER},
      </if>
      <if test="record.bookType1 != null" >
        book_type1 = #{record.bookType1,jdbcType=INTEGER},
      </if>
      <if test="record.bookTypeName2 != null" >
        book_type_name2 = #{record.bookTypeName2,jdbcType=VARCHAR},
      </if>
      <if test="record.bookTypeName1 != null" >
        book_type_name1 = #{record.bookTypeName1,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.professionalType1 != null" >
        professional_type1 = #{record.professionalType1,jdbcType=INTEGER},
      </if>
      <if test="record.professionalType2 != null" >
        professional_type2 = #{record.professionalType2,jdbcType=INTEGER},
      </if>
      <if test="record.professionalTypeName1 != null" >
        professional_type_name1 = #{record.professionalTypeName1,jdbcType=VARCHAR},
      </if>
      <if test="record.professionalTypeName2 != null" >
        professional_type_name2 = #{record.professionalTypeName2,jdbcType=VARCHAR},
      </if>
      <if test="record.cU != null" >
        c_u = #{record.cU,jdbcType=INTEGER},
      </if>
      <if test="record.cT != null" >
        c_t = #{record.cT,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set id = #{record.id,jdbcType=INTEGER},
      ISBN = #{record.isbn,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      press_time = #{record.pressTime,jdbcType=INTEGER},
      page_number = #{record.pageNumber,jdbcType=INTEGER},
      src = #{record.src,jdbcType=VARCHAR},
      pricing = #{record.pricing,jdbcType=DECIMAL},
      seller_number = #{record.sellerNumber,jdbcType=INTEGER},
      book_type2 = #{record.bookType2,jdbcType=INTEGER},
      book_type1 = #{record.bookType1,jdbcType=INTEGER},
      book_type_name2 = #{record.bookTypeName2,jdbcType=VARCHAR},
      book_type_name1 = #{record.bookTypeName1,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      professional_type1 = #{record.professionalType1,jdbcType=INTEGER},
      professional_type2 = #{record.professionalType2,jdbcType=INTEGER},
      professional_type_name1 = #{record.professionalTypeName1,jdbcType=VARCHAR},
      professional_type_name2 = #{record.professionalTypeName2,jdbcType=VARCHAR},
      c_u = #{record.cU,jdbcType=INTEGER},
      c_t = #{record.cT,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sharebook.model.Book" >
    update book
    <set >
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null" >
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="pressTime != null" >
        press_time = #{pressTime,jdbcType=INTEGER},
      </if>
      <if test="pageNumber != null" >
        page_number = #{pageNumber,jdbcType=INTEGER},
      </if>
      <if test="src != null" >
        src = #{src,jdbcType=VARCHAR},
      </if>
      <if test="pricing != null" >
        pricing = #{pricing,jdbcType=DECIMAL},
      </if>
      <if test="sellerNumber != null" >
        seller_number = #{sellerNumber,jdbcType=INTEGER},
      </if>
      <if test="bookType2 != null" >
        book_type2 = #{bookType2,jdbcType=INTEGER},
      </if>
      <if test="bookType1 != null" >
        book_type1 = #{bookType1,jdbcType=INTEGER},
      </if>
      <if test="bookTypeName2 != null" >
        book_type_name2 = #{bookTypeName2,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeName1 != null" >
        book_type_name1 = #{bookTypeName1,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="professionalType1 != null" >
        professional_type1 = #{professionalType1,jdbcType=INTEGER},
      </if>
      <if test="professionalType2 != null" >
        professional_type2 = #{professionalType2,jdbcType=INTEGER},
      </if>
      <if test="professionalTypeName1 != null" >
        professional_type_name1 = #{professionalTypeName1,jdbcType=VARCHAR},
      </if>
      <if test="professionalTypeName2 != null" >
        professional_type_name2 = #{professionalTypeName2,jdbcType=VARCHAR},
      </if>
      <if test="cU != null" >
        c_u = #{cU,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        c_t = #{cT,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sharebook.model.Book" >
    update book
    set ISBN = #{isbn,jdbcType=INTEGER},
      book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      press_time = #{pressTime,jdbcType=INTEGER},
      page_number = #{pageNumber,jdbcType=INTEGER},
      src = #{src,jdbcType=VARCHAR},
      pricing = #{pricing,jdbcType=DECIMAL},
      seller_number = #{sellerNumber,jdbcType=INTEGER},
      book_type2 = #{bookType2,jdbcType=INTEGER},
      book_type1 = #{bookType1,jdbcType=INTEGER},
      book_type_name2 = #{bookTypeName2,jdbcType=VARCHAR},
      book_type_name1 = #{bookTypeName1,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      professional_type1 = #{professionalType1,jdbcType=INTEGER},
      professional_type2 = #{professionalType2,jdbcType=INTEGER},
      professional_type_name1 = #{professionalTypeName1,jdbcType=VARCHAR},
      professional_type_name2 = #{professionalTypeName2,jdbcType=VARCHAR},
      c_u = #{cU,jdbcType=INTEGER},
      c_t = #{cT,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>