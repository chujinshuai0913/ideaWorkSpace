<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common.mapper.TypeBook1Mapper" >
  <resultMap id="BaseResultMap" type="common.model.TypeBook1" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="class_name1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="print_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="print_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="import_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="import_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="export_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="export_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_t" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="c_u" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, class_name1, print_user, print_time, import_user, import_time, export_user, export_time, 
    c_t, c_u, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from type_book1
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from type_book1
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="common.query.TypeBook1Query" >
    insert into type_book1 (id, class_name1, print_user, 
      print_time, import_user, import_time, 
      export_user, export_time, c_t, 
      c_u, status)
    values (#{id,jdbcType=INTEGER}, #{className1,jdbcType=VARCHAR}, #{printUser,jdbcType=INTEGER}, 
      #{printTime,jdbcType=INTEGER}, #{importUser,jdbcType=INTEGER}, #{importTime,jdbcType=INTEGER}, 
      #{exportUser,jdbcType=INTEGER}, #{exportTime,jdbcType=INTEGER}, #{cT,jdbcType=INTEGER}, 
      #{cU,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="common.model.TypeBook1" >
    insert into type_book1
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="className1 != null" >
        class_name1,
      </if>
      <if test="printUser != null" >
        print_user,
      </if>
      <if test="printTime != null" >
        print_time,
      </if>
      <if test="importUser != null" >
        import_user,
      </if>
      <if test="importTime != null" >
        import_time,
      </if>
      <if test="exportUser != null" >
        export_user,
      </if>
      <if test="exportTime != null" >
        export_time,
      </if>
      <if test="cT != null" >
        c_t,
      </if>
      <if test="cU != null" >
        c_u,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="className1 != null" >
        #{className1,jdbcType=VARCHAR},
      </if>
      <if test="printUser != null" >
        #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        #{cT,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        #{cU,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="common.model.TypeBook1" >
    update type_book1
    <set >
      <if test="className1 != null" >
        class_name1 = #{className1,jdbcType=VARCHAR},
      </if>
      <if test="printUser != null" >
        print_user = #{printUser,jdbcType=INTEGER},
      </if>
      <if test="printTime != null" >
        print_time = #{printTime,jdbcType=INTEGER},
      </if>
      <if test="importUser != null" >
        import_user = #{importUser,jdbcType=INTEGER},
      </if>
      <if test="importTime != null" >
        import_time = #{importTime,jdbcType=INTEGER},
      </if>
      <if test="exportUser != null" >
        export_user = #{exportUser,jdbcType=INTEGER},
      </if>
      <if test="exportTime != null" >
        export_time = #{exportTime,jdbcType=INTEGER},
      </if>
      <if test="cT != null" >
        c_t = #{cT,jdbcType=INTEGER},
      </if>
      <if test="cU != null" >
        c_u = #{cU,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="common.model.TypeBook1" >
    update type_book1
    set class_name1 = #{className1,jdbcType=VARCHAR},
      print_user = #{printUser,jdbcType=INTEGER},
      print_time = #{printTime,jdbcType=INTEGER},
      import_user = #{importUser,jdbcType=INTEGER},
      import_time = #{importTime,jdbcType=INTEGER},
      export_user = #{exportUser,jdbcType=INTEGER},
      export_time = #{exportTime,jdbcType=INTEGER},
      c_t = #{cT,jdbcType=INTEGER},
      c_u = #{cU,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryTypeBook1List" parameterType="common.model.TypeBook1" resultMap="BaseResultMap">
    select *
    from type_book1
    where status=1
    <if test="id != null">
      AND id= #{id}
    </if>
    <if test="sortName != null  ">
      ORDER BY ${sortName} ${sortOrder}
    </if>
  </select>
  <select id="queryTypeBook1ById" parameterType="java.lang.Integer" resultType="java.lang.String">
    select
      class_name1
    from type_book1
    where status=1 AND id=#{id}
  </select>
  <select id="queryTypeBook1Lists" parameterType="common.query.TypeBook1Query" resultMap="BaseResultMap">
    select *
    from type_book1
    where 1=1
    <if test="status != null">  AND status= #{status} </if>
    <if test="id != null">  AND id= #{id} </if>
    <if test="className1 != null and className1 !=''">  <![CDATA[	AND class_name1 LIKE CONCAT(CONCAT('%',#{className1}),'%')	]]> </if>
    <if test="sortName != null  ">        ORDER BY ${sortName} ${sortOrder} </if>
    <if test="pageNumber &gt;0 ">         limit #{startRecord} , #{pageSize} </if>
  </select>
  <select id="queryTypeBook1Count" parameterType="common.query.TypeBook1Query" resultType="java.lang.Integer">
    select count(*)
    from type_book1
    where 1=1
    <if test="status != null">  AND status= #{status} </if>
    <if test="id != null">  AND id= #{id} </if>
    <if test="className1 != null and className1 !=''">  <![CDATA[	AND class_name1 LIKE CONCAT(CONCAT('%',#{className1}),'%')	]]> </if>
  </select>
  <select id="queryTypeBook1ByName"  parameterType="common.query.TypeBook1Query" resultType="java.lang.Integer">
    select count(*)
    from type_book1
    where class_name1=#{className1}
  </select>
  <update id="updateBookClass1Status" >
    update type_book1
    set status = #{status},c_u = #{cU}, c_t = #{cTime}
    where id = #{id}
  </update>
</mapper>